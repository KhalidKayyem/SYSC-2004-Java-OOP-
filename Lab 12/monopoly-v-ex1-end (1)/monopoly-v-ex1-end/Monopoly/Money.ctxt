#BlueJ class context
comment0.target=Money
comment0.text=\r\n\ An\ amount\ of\ money\ in\ Canadian\ currency;\ i.e.,\ dollars\ and\ cents.\r\n\r\n\ @author\ Lynn\ Marshall,\ Department\ of\ Systems\ and\ Computer\ Engineering\r\n\ @version\ 1.0\r\n
comment1.params=cents
comment1.target=Money(int)
comment1.text=\r\n\ Constructs\ a\ Money\ object\ whose\ value\ is\ equal\ to\ the\ specified\r\n\ quantity\ of\ cents,\ which\ can\ be\ positive\ or\ negative,\ and\ <\ -99\ or\ >\ 99.\r\n\ \r\n\ @param\ cents\ A\ quantity\ of\ cents.\r\n\ @see\ Money\#Money(int,\ int)\r\n
comment2.params=dollars\ cents
comment2.target=Money(int,\ int)
comment2.text=\r\n\ Constructs\ a\ Money\ object\ whose\ value\ is\ equal\ to\ the\ specified\r\n\ quantity\ of\ dollars\ and\ cents,\ both\ of\ which\ can\ be\ positive\ or\r\n\ negative.\ Quantities\ of\ cents\ <\ -99\ or\ >\ 99\ will\ result\ in\ the\ \r\n\ dollar\ value\ being\ adjusted\ appropriately.\r\n\r\n\ @param\ dollars\ A\ quantity\ of\ dollars.\r\n\ @param\ cents\ A\ quantity\ of\ cents.\r\n\ @see\ Money\#Money(int)\r\n
comment3.params=
comment3.target=int\ dollars()
comment3.text=\r\n\ dollars\ returns\ the\ dollars\ part\ of\ this\ Money\ object.\ For\ example,\ if\ this\r\n\ object\ represents\ $9.37,\ 9\ is\ returned;\ and\ if\ this\ object\ represents\r\n\ -$7.14,\ -7\ is\ returned.\r\n\r\n\ @return\ the\ dollars\ part\ of\ this\ Money\ object.\r\n
comment4.params=
comment4.target=int\ cents()
comment4.text=\r\n\ cents\ returns\ the\ cents\ part\ of\ this\ Money\ object.\ For\ example,\ if\ this\r\n\ object\ represents\ $9.37,\ 37\ is\ returned;\ and\ if\ this\ object\ represents\r\n\ -$7.14,\ -14\ is\ returned.\r\n\r\n\ @return\ the\ cents\ part\ of\ this\ Money\ object,\ between\ -99\ and\ 99,\ inclusive.\r\n
comment5.params=anAmount
comment5.target=Money\ plus(Money)
comment5.text=\r\n\ plus\ returns\ the\ sum\ of\ this\ Money\ object\ and\ the\ specified\ amount\ of\ money.\r\n\r\n\ @param\ anAmount\ the\ Money\ object\ that\ is\ to\ be\ added\ to\ this\ object.\r\n\ @return\ a\ Money\ object\ equal\ to\ the\ sum\ of\ this\ Money\ object\ and\ anAmount.\r\n
comment6.params=anAmount
comment6.target=Money\ minus(Money)
comment6.text=\r\n\ minus\ returns\ the\ difference\ of\ this\ Money\ object\ and\ the\ specified\ amount\ of\ money.\r\n\r\n\ @param\ anAmount\ the\ Money\ object\ that\ is\ to\ be\ subtracted\ from\ this\ object.\r\n\ @return\ a\ Money\ object\ equal\ to\ the\ result\ of\ subtracting\ anAmount\ from\ this\r\n\ \ \ \ \ \ \ \ \ Money\ object.\r\n
comment7.params=anAmount
comment7.target=boolean\ isEqualTo(Money)
comment7.text=\r\n\ isEqualTo\ returns\ true\ if\ this\ and\ anAmount\ represent\ the\ same\ amount\ of\ money,\r\n\ and\ false\ otherwise.\r\n\ \r\n\ @param\ anAmount\ the\ Money\ object\ to\ compare\ this\ to.\r\n\ @return\ true\ if\ this\ and\ anAmount\ represent\ the\ same\ amount\ of\ money,\ false\ otherwise.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ Money\ object.\r\n\ \r\n\ @return\ a\ string\ representation\ of\ this\ Money\ object.\r\n
numComments=9
